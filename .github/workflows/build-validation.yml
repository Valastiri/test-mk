name: Build Validation

on:
  pull_request_target:
    types: [opened, synchronize, ready_for_review]
  issue_comment:
    types: [created]

jobs:
  validate:
    runs-on: ubuntu-latest
    # Check if PR, prevent running on forksm and trigger comment
    if: ${{ github.event.issue.pull_request && github.event.comment.body == 'check build' }}
    steps:
      - name: React to comment
        uses: actions/github-script@v5
        with:
          script: |
            const {owner, repo} = context.issue;
            github.rest.reactions.createForIssueComment({
              owner,
              repo,
              comment_id: context.payload.comment.id,
              content: "rocket",
            });
      - uses: actions/checkout@v2
        with:
          ref: ${{github.event.pull_request.head.ref}}
          repository: ${{github.event.pull_request.head.repo.full_name}}
      - run: git checkout HEAD^
      - uses: actions/setup-python@v2
        with:
          python-version: 3.x
      - run: |
          pip install -r requirements.txt
          mkdocs build -s
      - name: Message success
        if: ${{ success() }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Strict Build Validated! ✅',
            });
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v5
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Strict Build Failed! ❌',
            });
name: Build Validation

on:
  workflow_run:
    workflows: ["Pull Request Labeler"]
    types:
      - completed

jobs:
  validate-merge:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.sha.outputs.result }}
          fetch-depth: 0
      - name: Make Build
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: |
          pip install -r requirements.txt
          mkdocs build -s
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Strict Build Failed! ‚ùå',
            });
      - name: Auto merge pr
        if: ${{ success() }}
        run: gh pr merge --squash --auto --subject "${{ github.event.pull_request.title }}" "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}


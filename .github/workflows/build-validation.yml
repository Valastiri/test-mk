name: Build Validation

on:
  pull_request_target:
    types: [opened, ready_for_review, synchronize, labeled, unlabeled]

jobs:
  label_and_merge_prevention:
    runs-on: ubuntu-latest
    steps:
      - name: Assign Label
        if: github.event_name == 'pull_request'
        uses: actions-ecosystem/action-labeler@v2.2.0
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          label: 'Needs Review'

      - name: Prevent Merge
        if: contains(github.event.pull_request.labels.*.name, 'Needs Review')
        run: echo "::error::Pull request cannot be merged when Needs Review label is assigned." && exit 1

      - name: Remove Label
        if: contains(github.event.pull_request.labels.*.name, 'Auto Merge')
        uses: peter-evans/remove-labels@v1.2.0
        with:
          labels: |
            Needs Review
        run: echo "::set-output name=code::0"

  validate:
    needs: label_and_merge_prevention
    if: ${{ success () && contains(github.event.pull_request.labels.*.name, 'Auto Merge') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.sha.outputs.result }}
          fetch-depth: 0
      - name: Make Build
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: |
          pip install -r requirements.txt
          mkdocs build -s
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Strict Build Failed! ‚ùå',
            });
      - name: Auto merge pr
        if: ${{ success() }}
        run: gh pr merge --squash --auto "${{ github.event.pull_request.number }}"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

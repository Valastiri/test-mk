name: Build Validation

on:
  pull_request_target:
    types: [opened, ready_for_review, synchronize, labeled, unlabeled]

jobs:
  label_pr:
    runs-on: ubuntu-latest
    if: ${{ !contains(github.event.pull_request.labels.*.name, 'Needs Review') }}
    steps:
      - name: Assign Label
        uses: actions-ecosystem/action-add-labels@v1
        with:
          labels: 'Needs Review'

  review_required:
    runs-on: ubuntu-latest
    steps:
      - name: Check for Auto Merge or Needs Review
        if: ${{ contains(github.event.pull_request.labels.*.name, 'Auto Merge') || contains(github.event.pull_request.labels.*.name, 'Needs Review') }}
        run: |
          if [ "$(echo ${{ contains(github.event.pull_request.labels.*.name, 'Auto Merge') && contains(github.event.pull_request.labels.*.name, 'Needs Review') }})" == "true" ]; then
            echo "Both labels present"
            # code to be executed if both 'Auto Merge' and 'Needs Review' labels are present
            export run_remove_label=true
            export prevent_merge=false
          else
            echo "Only one label is present"
            # code to be executed if only one of the labels is present
            export run_remove_label=false
            export prevent_merge=${{ contains(github.event.pull_request.labels.*.name, 'Needs Review') }}
          fi
      - name: Remove Label
        if: ${{ env.run_remove_label == 'true' }}
        uses: actions-ecosystem/action-remove-labels@v1
        with:
          labels: Needs Review
        id: remove-label

      - name: Remove Label Failed
        if: ${{ steps.remove-label.outcome == 'failure' }}
        run: echo "Remove Label step failed" && exit 1

      - name: Remove Label Succeeded
        if: ${{ steps.remove-label.outcome == 'success' && steps.remove-label.outputs.code == '0' }}
        run: echo "Remove Label step succeeded and returned code 0"

      - name: Prevent Merge
        if: ${{ env.run_remove_label == 'false' && env.prevent_merge == 'true' }}
        run: echo "::error::Pull request cannot be merged when Needs Review label is assigned." && exit 1


  validate:
    needs: review_required
    if: ${{ success () && contains(github.event.pull_request.labels.*.name, 'Auto Merge') }}
    runs-on: ubuntu-latest
    steps:
      - name: Get PR SHA
        id: sha
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const { owner, repo, number } = context.issue;
            const pr = await github.rest.pulls.get({
              owner,
              repo,
              pull_number: number,
            });
            return pr.data.head.sha
      - uses: actions/checkout@v3
        with:
          ref: ${{ steps.sha.outputs.result }}
          fetch-depth: 0
      - name: Make Build
        uses: actions/setup-python@v4
        with:
          python-version: 3.x
      - run: |
          pip install -r requirements.txt
          mkdocs build -s
      - name: Message failure
        if: ${{ failure() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'Strict Build Failed! ‚ùå',
            });
